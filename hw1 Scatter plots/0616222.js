(function (d3$1) {
  'use strict';

  const dropDownMenu = (selection, props) => {
    const {
      options,
      onOptionClicked,
      selectedOption
    } = props;
    
    let select = selection.selectAll('select').data([null]);
    select = select.enter().append('select')
      .merge(select)
        .on('change', function() {
  		onOptionClicked(this.value);  
    	  });
    
    const option = select.selectAll('option').data(options);
    option.enter().append('option')
      .merge(option)
        .attr('value', d => d)
        .property('selected', d => d === selectedOption)
        .text(d => d);
  };

  const svg = d3$1.select('svg');

  const width = +svg.attr('width')-120;
  const height = +svg.attr('height');
      
  let xLabel;
  let yLabel;
  let dynamic_data;

  xLabel = 'sepal length';
  yLabel = 'sepal width';

  const onXColumnClicked = column => {
    xLabel = column;  
    svg.selectAll("*").remove();
    render(dynamic_data);
  };

  const onYColumnClicked = column => {
  	yLabel = column; 
    svg.selectAll("*").remove();
    render(dynamic_data);
  };

  const render = data => {
    const title = 'Iris Scatter Plot';
    
    const circleRadius = 10;
    const xAxisPadding = 15;
    const yAxisPadding = 13;
    
   	const color = d3.scaleOrdinal()
      .domain(["Iris-virginica", "Iris-versicolor", "Iris-setosa" ])
      .range([ "#E3BA22", "#137B80", "#8E6C8A"]); 
    
    const margin = { top: 75, right: 40, bottom: 100, left: 120 };
    const innerWidth = width - margin.left - margin.right;
    const innerHeight = height - margin.top - margin.bottom;

    let xValue;
    let xAxisLabel;

    let yValue;
    let yAxisLabel;
    
    if (xLabel == 'sepal length'){
    	xAxisLabel = 'sepal length';
    }else if(xLabel == 'sepal width'){
    	xAxisLabel = 'sepal width';
    }else if(xLabel == 'petal length'){
    	xAxisLabel = 'petal length';
    }else if(xLabel == 'petal width'){
    	xAxisLabel = 'petal width';
    }  xValue = d => d[xAxisLabel];
    
    if (yLabel == 'sepal length'){
    	yAxisLabel = 'sepal length';
    }else if(yLabel == 'sepal width'){
    	yAxisLabel = 'sepal width';
    }else if(yLabel == 'petal length'){
    	yAxisLabel = 'petal length';
    }else if(yLabel == 'petal width'){
    	yAxisLabel = 'petal width';
    }  yValue = d => d[yAxisLabel];
    
    const xScale = d3$1.scaleLinear()
      .domain(d3$1.extent(data, xValue))
      .range([0, innerWidth])
      .nice();
    
    const yScale = d3$1.scaleLinear()
      .domain(d3$1.extent(data, yValue))
      .range([innerHeight, 0])
      .nice();

    const colorLegend = d3$1.legendColor()
      .scale(color)
      .shape('circle');
    
    const g = svg.append('g')
      .attr('transform', `translate(${margin.left},${margin.top})`);
    	g.append('text').text('-0616222-')
        .attr('transform','translate(-100,390)')
        .attr('font-size','1.3em')
        .attr('fill','#635F5D');

    d3$1.select('#x_axis_menu')
      .call(dropDownMenu, {
        options: data.columns.filter(column =>
          column !== 'class'&&
          column !== yLabel
        ),
        onOptionClicked: onXColumnClicked,
        selectedOption: xLabel
    });
    
    d3$1.select('#y_axis_menu')
      .call(dropDownMenu, {
        options: data.columns.filter(column =>
          column !== 'class'&&
          column !== xLabel
        ),
        onOptionClicked: onYColumnClicked,
        selectedOption: yLabel
    });
    
    const xAxis = d3$1.axisBottom(xScale)
      .tickSize(-innerHeight)
      .tickPadding(xAxisPadding);
    
    const yAxis = d3$1.axisLeft(yScale)
      .tickSize(-innerWidth)
      .tickPadding(yAxisPadding);
    
    const yAxisG = g.append('g').call(yAxis);
    yAxisG.selectAll('.domain').remove();
    
    yAxisG.append('text')
        .attr('class', 'axis-label')
        .attr('y', -67)
        .attr('x', -innerHeight / 2)
        .attr('fill', 'black')
        .attr('transform', `rotate(-90)`)
        .attr('text-anchor', 'middle')
        .text(yAxisLabel);
    
    const xAxisG = g.append('g').call(xAxis)
      .attr('transform', `translate(0,${innerHeight})`);
    
    xAxisG.select('.domain').remove();
    
    xAxisG.append('text')
        .attr('class', 'axis-label')
        .attr('y', 70)
        .attr('x', innerWidth / 2)
        .attr('fill', 'black')
        .text(xAxisLabel);
    
    const colorLegendG = g.append('g')
          .attr('transform', `translate(${innerWidth+27}, 273)`);
    
    colorLegendG
          .append('text')
    			.attr('class', 'legend-label')
          .attr('x', 9)
          .attr('y', -15)
          .text('classes');
    
    g.selectAll('circle').data(data)
      .enter().append('circle')
        .attr('cy', d => yScale(yValue(d)))
        .attr('cx', d => xScale(xValue(d)))
        .attr('r', circleRadius)
  			.style("fill", function(d){ return color(d.class) })
      	.attr("stroke", function(d){ return color(d.class) });
    
    g.append('text')
        .attr('class', 'title')
        .attr('y', -20)
    		.attr('x', 175)
        .text(title);

    colorLegendG.call(colorLegend)
      .attr('class', 'legend-class')
      .selectAll('.cell text');
  };

  d3$1.csv('iris.csv')
    .then(data => {
    	
      data.forEach(d => {
        if(d['sepal length']==""){d['sepal length']=9;}
        d['sepal length'] = +d['sepal length'];
        d['sepal width'] = +d['sepal width'];
        d['petal length'] = +d['petal length'];
        d['petal width'] = +d['petal width']; //change string into number
      });
    data.pop();
    dynamic_data = data;
    render(dynamic_data);
    });

}(d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,